

#本地端口
server.port=8003
#本服务器在注册中心所显示的名字
spring.application.name=csc
#注册中心地址
eureka.client.serviceUrl.defaultZone=http://118.25.40.14:8000/eureka/

#通过配置中心进行配置  实际部署时再放开
#spring.cloud.config.profile=dev
#spring.cloud.config.uri= http://localhost:8888/


#注意必须写useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC，否则高版本mysql会报错
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/db04?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=123456
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.hikari.read-only=false

spring.datasource.hikari.connection-timeout=60000
spring.datasource.hikari.idle-timeout=60000
spring.datasource.hikari.validation-timeout=3000
spring.datasource.hikari.max-lifetime=60000
spring.datasource.hikari.login-timeout=5
spring.datasource.hikari.maximum-pool-size=60
spring.datasource.hikari.minimum-idle=10


# Specify the DBMS
spring.jpa.database = MYSQL
# Show or not log for each sql query
spring.jpa.show-sql = true
# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update
# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
# stripped before adding them to the entity manager
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.http.encoding.force=true
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
server.tomcat.uri-encoding=UTF-8
spring.resources.chain.strategy.content.enabled=true

#activemq配置文件
#activeMQ地址
spring.activemq.broker-url=tcp://118.25.40.14:61616
#activeMQ用户名，根据实际情况配置
spring.activemq.user=cong
#activeMQ密码，根据实际情况配置
spring.activemq.password=123
#是否启用内存模式（也就是不安装MQ，项目启动时同时也启动一个MQ实例）
spring.activemq.in-memory=false
#信任所有的包
spring.activemq.packages.trust-all=true
#如果是点对点（queue），那么此处默认应该是false，如果发布订阅，那么一定设置为true
spring.jms.pub-sub-domain=false



#
#datasource.qss.max-idle=10
## Number of ms to wait before throwing an exception if no connection is available.
#datasource.qss.max-wait=60000
#datasource.qss.min-idle=5
#datasource.qss.initial-size=5
## Maximum number of active connections that can be allocated from this pool at the same time.
#datasource.qss.max-active=100
#datasource.qss.validation-query=SELECT 1
##使用testOnBorrow为true（即在获取Connection对象时检测其可用性），不过这样会影响性能
## Validate the connection before borrowing it from the pool.
#datasource.qss.test-on-borrow=true
##有些数据库连接的时候有超时限制（mysql连接在8小时后断开），或者由于网络中断等原因，连接池的连接会出现失效的情况，这时候设置一个testWhileIdle参数为true，可以保证连接池内部定时检测连接的可用性，不可用的连接会被抛弃或者重建，最大情况的保证从连接池中得到的Connection对象是可用的。
#datasource.qss.test-while-idle=true
##设置当连接被归还时，是否要提交所有还未完成的事务
#datasource.qss.test-on-return=false
##如果当前连接池中某个连接在空闲了timeBetweenEvictionRunsMillis时间后任然没有使用，则被物理性的关闭掉。
#datasource.qss.time-between-eviction-runs-millis=60000
## 配置一个连接在池中最小生存的时间，单位是毫秒
#datasource.qss.min-evictable-idle-time-millis=300000
#datasource.qss.jdbc-interceptors=ConnectionState;SlowQueryReport(threshold=0)